{"version":3,"sources":["index.js"],"names":["h","require","classNames","ItemIcon","GridListItem","ListItem","module","exports","props","author","itemIconString","getItemIcon","className","isChecked","isDisabled","itemIconEl","viewType","url","name","Error"],"mappings":";;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAQC,OAAO,CAAC,QAAD,CAArB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,uBAAD,CAAxB;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,qBAAD,CAA5B;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,qBAAD,CAAxB;;AAEAK,MAAM,CAACC,OAAP,GAAkBC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,QAAME,cAAc,GAAGF,KAAK,CAACG,WAAN,EAAvB;AAEA,QAAMC,SAAS,GAAGV,UAAU,CAC1B,0BAD0B,EAE1B;AAAE,0CAAsCM,KAAK,CAACK;AAA9C,GAF0B,EAG1B;AAAE,0CAAsCL,KAAK,CAACM;AAA9C,GAH0B,EAI1B;AAAE,2CAAuCJ,cAAc,KAAK;AAA5D,GAJ0B,CAA5B;AAOA,QAAMK,UAAU,GAAG,EAAC,QAAD;AAAU,IAAA,cAAc,EAAEL;AAA1B,IAAnB;;AAEA,UAAQF,KAAK,CAACQ,QAAd;AACE,SAAK,MAAL;AACE,aACE,EAAC,YAAD,eACMR,KADN;AAEE,QAAA,SAAS,EAAEI,SAFb;AAGE,QAAA,UAAU,EAAEG;AAHd,SADF;;AAOF,SAAK,MAAL;AACE,aACE,EAAC,QAAD,eAAcP,KAAd;AAAqB,QAAA,SAAS,EAAEI,SAAhC;AAA2C,QAAA,UAAU,EAAEG;AAAvD,SADF;;AAGF,SAAK,UAAL;AACE,aACE,EAAC,YAAD,eAAkBP,KAAlB;AAAyB,QAAA,SAAS,EAAEI,SAApC;AAA+C,QAAA,UAAU,EAAEG;AAA3D,UACE;AACE,QAAA,IAAI,EAAG,GAAEN,MAAM,CAACQ,GAAI,2CADtB;AAEE,QAAA,MAAM,EAAC,QAFT;AAGE,QAAA,GAAG,EAAC,qBAHN;AAIE,QAAA,SAAS,EAAC;AAJZ,SAMGR,MAAM,CAACS,IANV,CADF,CADF;;AAYF;AACE,YAAM,IAAIC,KAAJ,CAAW,yBAAwBX,KAAK,CAACQ,QAAS,EAAlD,CAAN;AA3BJ;AA6BD,CA1CD","sourcesContent":["const { h } = require('preact')\nconst classNames = require('classnames')\nconst ItemIcon = require('./components/ItemIcon')\nconst GridListItem = require('./components/GridLi')\nconst ListItem = require('./components/ListLi')\n\nmodule.exports = (props) => {\n  const { author } = props\n  const itemIconString = props.getItemIcon()\n\n  const className = classNames(\n    'uppy-ProviderBrowserItem',\n    { 'uppy-ProviderBrowserItem--selected': props.isChecked },\n    { 'uppy-ProviderBrowserItem--disabled': props.isDisabled },\n    { 'uppy-ProviderBrowserItem--noPreview': itemIconString === 'video' },\n  )\n\n  const itemIconEl = <ItemIcon itemIconString={itemIconString} />\n\n  switch (props.viewType) {\n    case 'grid':\n      return (\n        <GridListItem\n          {...props}\n          className={className}\n          itemIconEl={itemIconEl}\n        />\n      )\n    case 'list':\n      return (\n        <ListItem {...props} className={className} itemIconEl={itemIconEl} />\n      )\n    case 'unsplash':\n      return (\n        <GridListItem {...props} className={className} itemIconEl={itemIconEl}>\n          <a\n            href={`${author.url}?utm_source=Companion&utm_medium=referral`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"uppy-ProviderBrowserItem-author\"\n          >\n            {author.name}\n          </a>\n        </GridListItem>\n      )\n    default:\n      throw new Error(`There is no such type ${props.viewType}`)\n  }\n}\n"]}