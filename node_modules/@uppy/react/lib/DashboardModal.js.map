{"version":3,"sources":["DashboardModal.js"],"names":["React","require","PropTypes","DashboardPlugin","basePropTypes","dashboard","getHTMLProps","nonHtmlPropsHaveChanged","h","createElement","DashboardModal","Component","componentDidMount","installPlugin","componentDidUpdate","prevProps","uppy","props","uninstallPlugin","options","onRequestCloseModal","onRequestClose","plugin","setOptions","open","closeModal","openModal","componentWillUnmount","id","target","container","use","getPlugin","removePlugin","render","validProps","ref","propTypes","window","instanceOf","HTMLElement","any","bool","func","closeModalOnClickOutside","disablePageScrollWhenModalOpen","module","exports"],"mappings":"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","sourcesContent":["const React = require('react')\nconst PropTypes = require('prop-types')\nconst DashboardPlugin = require('@uppy/dashboard')\nconst basePropTypes = require('./propTypes').dashboard\nconst getHTMLProps = require('./getHTMLProps')\nconst nonHtmlPropsHaveChanged = require('./nonHtmlPropsHaveChanged')\n\nconst h = React.createElement\n\n/**\n * React Component that renders a Dashboard for an Uppy instance in a Modal\n * dialog. Visibility of the Modal is toggled using the `open` prop.\n */\n\nclass DashboardModal extends React.Component {\n  componentDidMount () {\n    this.installPlugin()\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.uppy !== this.props.uppy) {\n      this.uninstallPlugin(prevProps)\n      this.installPlugin()\n    } else if (nonHtmlPropsHaveChanged(this, prevProps)) {\n      const options = { ...this.props, onRequestCloseModal: this.props.onRequestClose }\n      delete options.uppy\n      this.plugin.setOptions(options)\n    }\n    if (prevProps.open && !this.props.open) {\n      this.plugin.closeModal()\n    } else if (!prevProps.open && this.props.open) {\n      this.plugin.openModal()\n    }\n  }\n\n  componentWillUnmount () {\n    this.uninstallPlugin()\n  }\n\n  installPlugin () {\n    const { uppy } = this.props\n    const options = {\n      id: 'react:DashboardModal',\n      ...this.props,\n      onRequestCloseModal: this.props.onRequestClose,\n    }\n\n    if (!options.target) {\n      options.target = this.container\n    }\n\n    delete options.uppy\n    uppy.use(DashboardPlugin, options)\n\n    this.plugin = uppy.getPlugin(options.id)\n    if (this.props.open) {\n      this.plugin.openModal()\n    }\n  }\n\n  uninstallPlugin (props = this.props) {\n    const { uppy } = props\n\n    uppy.removePlugin(this.plugin)\n  }\n\n  render () {\n    // TODO: stop exposing `validProps` as a public property and rename it to `htmlProps`\n    this.validProps = getHTMLProps(this.props)\n    return h('div', {\n      ref: (container) => {\n        this.container = container\n      },\n      ...this.validProps,\n    })\n  }\n}\n\nDashboardModal.propTypes = {\n  target: typeof window !== 'undefined' ? PropTypes.instanceOf(window.HTMLElement) : PropTypes.any,\n  open: PropTypes.bool,\n  onRequestClose: PropTypes.func,\n  closeModalOnClickOutside: PropTypes.bool,\n  disablePageScrollWhenModalOpen: PropTypes.bool,\n  ...basePropTypes,\n}\n\nmodule.exports = DashboardModal\n"]}